//     (c) 2012-2016 Airbnb, Inc.
//
//     polyglot.js may be freely distributed under the terms of the BSD
//     license. For all licensing information, details, and documention:
//     http://airbnb.github.com/polyglot.js
//
//
// Polyglot.js is an I18n helper library written in JavaScript, made to
// work both in the browser and in Node. It provides a simple solution for
// interpolation and pluralization, based off of Airbnb's
// experience adding I18n functionality to its Backbone.js and Node apps.
//
// Polylglot is agnostic to your translation backend. It doesn't perform any
// translation; it simply gives you a way to manage translated phrases from
// your client- or server-side JavaScript application.
//

function isPresent(r){return void 0!==r&&null!==r}function langToTypeMap(r){var e={};return forEach(r,function(r,t){forEach(r,function(r){e[r]=t})}),e}function pluralTypeName(r){var e=langToTypeMap(pluralTypeToLanguages);return e[r]||e[split.call(r,/-/,1)[0]]||e.en}function pluralTypeIndex(r,e){return pluralTypes[pluralTypeName(r)](e)}function transformPhrase(r,e,t){if("string"!=typeof r)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==e)return r;var n=r,o="number"==typeof e?{smart_count:e}:e;if(null!=o.smart_count&&n){var s=split.call(n,delimeter);n=trim(s[pluralTypeIndex(t||"en",o.smart_count)]||s[0])}return n=replace.call(n,tokenRegex,function(r,e){return has(o,e)&&null!=o[e]?replace.call(o[e],dollarRegex,dollarBillsYall):r})}function Polyglot(r){var e=r||{};this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||"en";var t=e.allowMissing?transformPhrase:null;this.onMissingKey="function"==typeof e.onMissingKey?e.onMissingKey:t,this.warn=e.warn||warn}var forEach=require("for-each"),warning=require("warning"),has=require("has"),trim=require("string.prototype.trim"),warn=function(r){warning(!1,r)},replace=String.prototype.replace,split=String.prototype.split,delimeter="||||",pluralTypes={arabic:function(r){return r<3?r:r%100>=3&&r%100<=10?3:r%100>=11?4:5},chinese:function(){return 0},german:function(r){return 1!==r?1:0},french:function(r){return r>1?1:0},russian:function(r){return r%10===1&&r%100!==11?0:r%10>=2&&r%10<=4&&(r%100<10||r%100>=20)?1:2},czech:function(r){return 1===r?0:r>=2&&r<=4?1:2},polish:function(r){return 1===r?0:r%10>=2&&r%10<=4&&(r%100<10||r%100>=20)?1:2},icelandic:function(r){return r%10!==1||r%100===11?1:0}},pluralTypeToLanguages={arabic:["ar"],chinese:["id","ja","ko","lo","ms","th","tr","zh"],german:["fa","da","de","en","es","fi","el","he","hu","it","nl","no","pt","sv"],french:["fr","tl","pt-br"],russian:["hr","ru","lt"],czech:["cs","sk"],polish:["pl"],icelandic:["is"]},dollarRegex=/\$/g,dollarBillsYall="$$",tokenRegex=/%\{(.*?)\}/g;Polyglot.prototype.locale=function(r){return r&&(this.currentLocale=r),this.currentLocale},Polyglot.prototype.extend=function(r,e){forEach(r,function(r,t){var n=e?e+"."+t:t;isPresent(r)&&r.constructor===Array?this.phrases[n]=r:"object"==typeof r?this.extend(r,n):this.phrases[n]=r},this)},Polyglot.prototype.unset=function(r,e){"string"==typeof r?delete this.phrases[r]:forEach(r,function(r,t){var n=e?e+"."+t:t;"object"==typeof r?this.unset(r,n):delete this.phrases[n]},this)},Polyglot.prototype.clear=function(){this.phrases={}},Polyglot.prototype.replace=function(r){this.clear(),this.extend(r)},Polyglot.prototype.t=function(r,e){var t,n,o,s=null==e?{}:e;if("string"==typeof this.phrases[r])t=this.phrases[r];else if(isPresent(this.phrases[r])&&this.phrases[r].constructor===Array)t=this.phrases[r];else if("string"==typeof s._)t=s._;else if(this.onMissingKey){var i=this.onMissingKey;n=i(r,s,this.currentLocale)}else this.warn('Missing translation for key: "'+r+'"'),n=r;return null!=n?n:(t=t.constructor===Array?t:[t],o=t.map(function(r){return"string"==typeof r?transformPhrase(r,s,this.currentLocale):r},this),1===o.length?o[0]:o)},Polyglot.prototype.has=function(r){return has(this.phrases,r)},Polyglot.transformPhrase=transformPhrase,module.exports=Polyglot,define("index",function(){});